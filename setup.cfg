[metadata]
name = bookshelf
keywords = data management, climate
author = Jared Lewis
author_email = jared.lewis@climate-rescource.com
license = MIT

description = A collection of curated climate data sets
description_file = README.rst
long_description_content_type = text/x-rst
long_description =
    bookshelf
    =========

    ``bookshelf`` is how Climate Resource reuses datasets across projects


    The ``bookshelf`` represents a shared collection of curated datasets or ``Books``. Each
    ``Book`` is a preprocessed, versioned dataset including the notebooks used to produce it.
    As the underlying datasets or processing are updated, new ``Books`` can be created (with
    an updated version). A single dataset may produce multiple ``Resources`` if different
    representations are useful. These ``Books`` can be deployed to a shared ``Bookshelf`` so
    that they are accessible by other users.

    Users are able to use specific ``Books`` within other projects. The dataset and associated
    metadata is fetched and cached locally. Specific versions of ``Books`` can also be pinned for
    reproducibility purposes.

    This repository contains the notebooks that are used to generate the ``Books``
    as well as a CLI tool for managing these datasets.

    This is a prototype and will likely change in future

url = https://gitlab.com/climate-resource/bookshelf/bookshelf
# full list at https://pypi.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 4 - Beta
    License :: OSI Approved :: MIT License
    Intended Audience :: Developers
    Operating System :: OS Independent
    Intended Audience :: Science/Research
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Topic :: Scientific/Engineering

[options]
packages = find:
package_dir =
    =src
python_requires = >=3.7
install_requires =
    click
    click-log
    scmdata>=0.14.2
    pooch
    boto3
    importlib-metadata; python_version < '3.8'
    pydantic
    datapackage
    pycountry
    appdirs
    python-dotenv

[options.packages.find]
where = src

[options.extras_require]
notebooks =
    notebook
    matplotlib
    seaborn
    papermill
    jupytext

tests =
    coverage
    pytest-cov
    requests_mock
    pytest>=4.0
    pytest-mock
    pytest-xdist
    moto[s3]
    %(notebooks)s

docs =
    sphinx
    sphinx_rtd_theme
    sphinx-click

dev =
    bandit
    build
    # Also update black, isort and flake8 versions in precommit hook
    black == 22.3.0
    flake8 == 4.0.1
    isort == 5.5.2
    mypy
    pydocstyle
    pylint >= 2.4.4
    pre-commit
    twine
    %(notebooks)s
    %(tests)s
    %(docs)s

[options.entry_points]
console_scripts =
    bookshelf = bookshelf.cli:main

[flake8]
max-line-length = 88
ignore = E203, E266, E501, W503

[isort]
default_section = THIRDPARTY
# comma after multiline breaks like black:
include_trailing_comma = true
known_first_party = bookshelf
profile = black
skip_gitignore = true

[mypy]
disallow_incomplete_defs = true
disallow_subclassing_any = true
ignore_missing_imports = true
no_implicit_optional = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[pydocstyle]
# D213 - Multi-line docstring summary should start at the second line
# D402 - First line should not be the signature of the function
add_select = D213, D402
# D105 - Missing docstring in magic method
# D200 - One-line docstring should fit on one line with quotes
# D205 - 1 blank line required between summary line and description
# D400 - First line should end with a period
add_ignore = D105, D200, D205, D400
convention = numpy
inherit = false
match = (?!test_|_version).*\.py
